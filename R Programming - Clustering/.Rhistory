yfit <- yfit * diff(h$mids[1:2]) * length(rawdata$Total)
lines(xfit, yfit, col = "red", lwd = 2)
merged_result_rf
result_rf <- predict(randomFor,test2[,c(1:3)])
urutan <- sample(1:nrow(rawdata),as.integer(0.7*nrow(rawdata)))
train <- rawdata[urutan,]
test <- rawdata[-urutan,]
summary(train)
summary(test)
km.out <- kmeans(rawdata[,3:11], center=2, nstart=10)
km.out <- kmeans(rawdata[,3:9], center=2, nstart=10)
km.out <- kmeans(rawdata[,3:9], center=2, nstart=10)
# Create the k-means model: km.out
km.out <- kmeans(x[,2:4], center=2, nstart=10)
# Data understanding
tail(x)
tail(rawdata)
km.out <- kmeans(rawdata[,5:11], center=2, nstart=10)
tail(rawdata)
km.out <- kmeans(rawdata[,5:11], center=2, nstart=10)
km.out
km.out <- kmeans(rawdata[,5:11], center=3, nstart=10)
km.out
km.out <- kmeans(rawdata[,5:11], center=4, nstart=10)
km.out
km.out <- kmeans(rawdata[,5:11], center=5, nstart=10)
km.out
km.out <- kmeans(rawdata[,5:11], center=3, nstart=10)
km.out
print(km.out)
summary(km.out)
print(km.out$centers)
print(km.out$cluster)
print(km.out$centers)
print(km.out$cluster)
rawdata2 <- rawdata
rawdata2$cluster <- km.out$cluster
tail(rawdata2)
# Jumlah setiap cluster
library(tidyverse)
rawdata2 %>% group_by(cluster) %>% count(cluster)
# Scatter plot
plot(rawdata2[,5:11], col = km.out$cluster,
main = "k-means with 3 clusters")
# Penjelasan Cluster 1
cluster1 <- rawdata2 %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
rawdata2 %>% group_by(cluster) %>% count(cluster)
## Cek mean / data center
mean(cluster1$recency)
cluster1 %>% group_by(cluster) %>% count(cluster)
tail(cluster1)
print(km.out$centers)
## Cek mean / data center
print(km.out$centers)
## Cek mean / data center
print(cluster1$centers)
km.out
## Cek mean / data center
print(km.out$centers)
## Scatter plot of Cluster 1
plot(cluster1[,2:4], col = "black",
main = "k-means with 3 clusters, cluster 1")
## Scatter plot of Cluster 1
plot(cluster1[,5:6], col = "black",
main = "k-means with 3 clusters, cluster 1")
## Scatter plot of Cluster 1
plot(cluster1[,5:11], col = "black",
main = "k-means with 3 clusters, cluster 1")
## Scatter plot of Cluster 1
plot(cluster1[,5:11], col = "black",
main = "k-means with 3 clusters (cluster 1)")
# Penjelasan Cluster 1
cluster1 <- rawdata2 %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
# Jumlah setiap cluster
library(tidyverse)
rawdata2 %>% group_by(cluster) %>% count(cluster)
## Cek mean / data center
print(km.out$centers)
# Scatter plot
plot(rawdata2[,5:11], col = km.out$cluster,
main = "k-means with 3 clusters")
# Penjelasan Cluster 1
cluster1 <- rawdata2 %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
## Scatter plot of Cluster 1
plot(cluster1[,5:11], col = "black",
main = "k-means with 3 clusters (cluster 1)")
# Scatter plot
plot(rawdata2[,5:11], col = km.out$cluster,
main = "k-means with 3 clusters")
# Penjelasan Cluster 1
cluster1 <- rawdata2 %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
# Penjelasan Cluster 1
cluster1 <- rawdata2 %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
# Penjelasan Cluster 1
cluster1 <- rawdata2 %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
# Jumlah setiap cluster
library(tidyverse)
rawdata2 %>% group_by(cluster) %>% count(cluster)
# Cek mean / data center
print(km.out$centers)
# Penjelasan Cluster 2
cluster2 <- x %>% filter(cluster==2)
tail(cluster2)
cluster2 %>% group_by(cluster) %>% count(cluster)
# Scatter plot of Cluster 2
plot(cluster2[,2:4], col = "red",
main = "k-means with 3 clusters, cluster 2")
summary(cluster2)
# Penjelasan Cluster 2
cluster2 <- rawdata2 %>% filter(cluster==2)
tail(cluster2)
cluster2 %>% group_by(cluster) %>% count(cluster)
# Scatter plot of Cluster 2
plot(cluster2[,5:11], col = "red",
main = "k-means with 3 clusters, cluster 2")
summary(cluster2)
# Scatter plot of Cluster 2
plot(cluster2[,5:11], col = "red",
main = "k-means with 3 clusters (cluster 2)")
summary(cluster2)
# Penjelasan Cluster 3
cluster3 <- x %>% filter(cluster==3)
tail(cluster3)
cluster3 %>% group_by(cluster) %>% count(cluster)
# Penjelasan Cluster 3
cluster3 <- rawdata2 %>% filter(cluster==3)
tail(cluster3)
cluster3 %>% group_by(cluster) %>% count(cluster)
# Scatter plot of Cluster 2
plot(cluster2[,5:11], col = "red",
main = "k-means with 3 clusters (cluster 2)")
## Scatter plot of Cluster 3
plot(cluster3[,5:11], col = "green",
main = "k-means with 3 clusters, cluster 3")
View(cluster1)
print(km.out$centers)
print(km.out$cluster)
km.out$centers
km.out$cluster
print(km.out$centers)
print(km.out$cluster)
View(cluster2)
View(cluster3)
View(rawdata2)
rawdata <- read.csv("Pokemon.csv")
tail(rawdata)
dim(rawdata)
str(rawdata)
tail(rawdata)
cluster3 <- rawdata2 %>% filter(cluster==3)
tail(cluster3)
cluster3 %>% group_by(cluster) %>% count(cluster)
plot(cluster3[,5:11], col = "green",
main = "k-means with 3 clusters, cluster 3")
rawdata <- read.csv("Pokemon.csv")
tail(rawdata)
dim(rawdata)
str(rawdata)
summary(rawdata)
library(DataExplorer)
library(corrplot)
library(tidyverse)
h1 <- hist(rawdata$Total, xlab = "Value", ylab= "Count", main = "Total", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Total), max(rawdata$Total), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Total), sd = sd(rawdata$Total))
yfit <- yfit * diff(h1$mids[1:2]) * length(rawdata$Total)
lines(xfit, yfit, col = "red", lwd = 2)
h2 <- hist(rawdata$HP, xlab = "Value", ylab= "Count", main = "HP", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$HP), max(rawdata$HP), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$HP), sd = sd(rawdata$HP))
yfit <- yfit * diff(h2$mids[1:2]) * length(rawdata$HP)
lines(xfit, yfit, col = "red", lwd = 2)
h3 <- hist(rawdata$Attack, xlab = "Value", ylab= "Count", main = "Attack", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Attack), max(rawdata$Attack), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Attack), sd = sd(rawdata$Attack))
yfit <- yfit * diff(h3$mids[1:2]) * length(rawdata$Attack)
lines(xfit, yfit, col = "red", lwd = 2)
h4 <- hist(rawdata$Defense, xlab = "Value", ylab= "Count", main = "Defense", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Defense), max(rawdata$Defense), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Defense), sd = sd(rawdata$Defense))
yfit <- yfit * diff(h4$mids[1:2]) * length(rawdata$Defense)
lines(xfit, yfit, col = "red", lwd = 2)
h5 <- hist(rawdata$Sp..Atk, xlab = "Value", ylab= "Count", main = "Sp..Atk", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Sp..Atk), max(rawdata$Sp..Atk), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Sp..Atk), sd = sd(rawdata$Sp..Atk))
yfit <- yfit * diff(h5$mids[1:2]) * length(rawdata$Sp..Atk)
lines(xfit, yfit, col = "red", lwd = 2)
h6 <- hist(rawdata$Sp..Def, xlab = "Value", ylab= "Count", main = "Sp..Def", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Sp..Def), max(rawdata$Sp..Def), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Sp..Def), sd = sd(rawdata$Sp..Def))
yfit <- yfit * diff(h6$mids[1:2]) * length(rawdata$Sp..Def)
lines(xfit, yfit, col = "red", lwd = 2)
h7 <- hist(rawdata$Speed, xlab = "Value", ylab= "Count", main = "Speed", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Speed), max(rawdata$Speed), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Speed), sd = sd(rawdata$Speed))
yfit <- yfit * diff(h7$mids[1:2]) * length(rawdata$Speed)
lines(xfit, yfit, col = "red", lwd = 2)
tail(rawdata)
km.out <- kmeans(rawdata[,5:11], center=3, nstart=10)
km.out
print(km.out$centers)
print(km.out$cluster)
rawdata2 <- rawdata
rawdata2$cluster <- km.out$cluster
tail(rawdata2)
library(tidyverse)
rawdata2 %>% group_by(cluster) %>% count(cluster)
# Cek mean / data center
print(km.out$centers)
plot(rawdata2[,5:11], col = km.out$cluster,
main = "k-means with 3 clusters")
cluster1 <- rawdata2 %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
plot(cluster1[,5:11], col = "black",
main = "k-means with 3 clusters (cluster 1)")
cluster2 <- rawdata2 %>% filter(cluster==2)
tail(cluster2)
cluster2 %>% group_by(cluster) %>% count(cluster)
plot(cluster2[,5:11], col = "red",
main = "k-means with 3 clusters (cluster 2)")
cluster3 <- rawdata2 %>% filter(cluster==3)
tail(cluster3)
cluster3 %>% group_by(cluster) %>% count(cluster)
plot(cluster3[,5:11], col = "green",
main = "k-means with 3 clusters, cluster 3")
print(km.out$centers)
rawdata %>% group_by(Type.1) %>% count(Type.1)
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1)
rawdata <- read.csv("Pokemon.csv")
tail(rawdata)
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1)
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange()
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc())
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(,desc())
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(.by_group)
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange()
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(,.by_group)
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange()
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(n)
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc(n))
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc(n), desc(Type.1))
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc(n), Type.1)
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc(n), Type.1)
rawdata %>% group_by(Type.1) %>% summarise()
rawdata %>% group_by(Type.1)
rawdata %>% group_by(Type.1) %>% summarise()
rawdata %>% group_by(Type.1) %>% summarise_each()
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean))
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(Defense)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Defense))
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean))
%>% arrange(desc(Defense))
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Defense)) %>% select(Type.1, Defense)
rawdata %>% filter(Total = max(Total))
rawdata %>% filter(Total == max(Total))
rawdata %>% filter(Total == min(Total))
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc(n), Type.1)
rawdata %>% filter(Total == max(Total))
rawdata %>% filter(Total == max(Total))
rawdata %>% arrange(desc(Total))
rawdata %>% filter(Total == max(Total))
rawdata %>% arrange(desc(Total)) $>$ top_n(5)
rawdata %>% filter(Total == max(Total))
rawdata %>% arrange(desc(Total)) %>% top_n(5)
rawdata %>% filter(Total == max(Total))
rawdata %>% arrange(desc(Total)) %>% top_n(5)
rawdata %>% filter(Total == max(Total))
rawdata %>% arrange(desc(Total))
rawdata %>% filter(Total == max(Total))
rawdata %>% arrange(desc(Total)) %>% top_n(5, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(5, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-5, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-4, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-4, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-3, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-4, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-3, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-4, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-5, Total)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Defense)) %>% select(Type.1, Defense)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(HP)) %>% select(Type.1, HP)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Defense)) %>% select(Type.1, Defense)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Defense))
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean))
rawdata %>% group_by(Type.1)
rawdata %>% group_by(Type.1) %>% summarise(funs(mean))
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Defense)) %>% select(Type.1, Defense)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(HP)) %>% select(Type.1, HP)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Sp..Atk)) %>% select(Type.1, Sp..Atk)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Attack)) %>% select(Type.1, Attack)
rawdata %>% filter(Legendary == True)
rawdata %>% filter(Legendary = True)
rawdata %>% filter(Legendary == True)
rawdata %>% filter(Legendary == True)
rawdata %>% filter(Legendary == True)
View(rawdata)
rawdata %>% filter(Legendary == "True")
rawdata %>% filter(Legendary == "True") %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc(n), Type.1)
rawdata %>% filter(Type.1 == "Fire") %>% arrange(desc(Total))
rawdata %>% filter(Type.1 == "Fire") %>% arrange(desc(Total)) %>% select(Name, Total, Legendary)
rawdata %>% filter(Type.1 == "Electric") %>% arrange(desc(Total)) %>% select(Name, Total, Legendary)
rawdata %>% filter(Type.1 == "Dark") %>% arrange(desc(Total)) %>% select(Name, Total, Legendary)
rawdata %>% filter(Type.1 == "Grass") %>% arrange(desc(Total)) %>% select(Name, Type.1, Total, Legendary)
rawdata %>% filter(Type.1 == "Water") %>% arrange(desc(Total)) %>% select(Name, Type.1, Total, Legendary)
rawdata %>% filter(Type.1 == "Dragon") %>% arrange(desc(Total)) %>% select(Name, Type.1, Total, Legendary)
rawdata %>% filter(Type.1 == "Psychic") %>% arrange(desc(Total)) %>% select(Name, Type.1, Total, Legendary)
rawdata <- read.csv("Pokemon.csv")
tail(rawdata)
dim(rawdata)
str(rawdata)
summary(rawdata)
library(DataExplorer)
library(corrplot)
library(tidyverse)
plot_missing(rawdata)
h1 <- hist(rawdata$Total, xlab = "Value", ylab= "Count", main = "Total", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Total), max(rawdata$Total), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Total), sd = sd(rawdata$Total))
yfit <- yfit * diff(h1$mids[1:2]) * length(rawdata$Total)
lines(xfit, yfit, col = "red", lwd = 2)
h2 <- hist(rawdata$HP, xlab = "Value", ylab= "Count", main = "HP", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$HP), max(rawdata$HP), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$HP), sd = sd(rawdata$HP))
yfit <- yfit * diff(h2$mids[1:2]) * length(rawdata$HP)
lines(xfit, yfit, col = "red", lwd = 2)
h3 <- hist(rawdata$Attack, xlab = "Value", ylab= "Count", main = "Attack", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Attack), max(rawdata$Attack), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Attack), sd = sd(rawdata$Attack))
yfit <- yfit * diff(h3$mids[1:2]) * length(rawdata$Attack)
lines(xfit, yfit, col = "red", lwd = 2)
h4 <- hist(rawdata$Defense, xlab = "Value", ylab= "Count", main = "Defense", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Defense), max(rawdata$Defense), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Defense), sd = sd(rawdata$Defense))
yfit <- yfit * diff(h4$mids[1:2]) * length(rawdata$Defense)
lines(xfit, yfit, col = "red", lwd = 2)
h5 <- hist(rawdata$Sp..Atk, xlab = "Value", ylab= "Count", main = "Sp..Atk", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Sp..Atk), max(rawdata$Sp..Atk), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Sp..Atk), sd = sd(rawdata$Sp..Atk))
yfit <- yfit * diff(h5$mids[1:2]) * length(rawdata$Sp..Atk)
lines(xfit, yfit, col = "red", lwd = 2)
h6 <- hist(rawdata$Sp..Def, xlab = "Value", ylab= "Count", main = "Sp..Def", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Sp..Def), max(rawdata$Sp..Def), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Sp..Def), sd = sd(rawdata$Sp..Def))
yfit <- yfit * diff(h6$mids[1:2]) * length(rawdata$Sp..Def)
lines(xfit, yfit, col = "red", lwd = 2)
h7 <- hist(rawdata$Speed, xlab = "Value", ylab= "Count", main = "Speed", prob = FALSE, col= "lightgray")
xfit <- seq(min(rawdata$Speed), max(rawdata$Speed), length = 800)
yfit <- dnorm(xfit, mean = mean(rawdata$Speed), sd = sd(rawdata$Speed))
yfit <- yfit * diff(h7$mids[1:2]) * length(rawdata$Speed)
lines(xfit, yfit, col = "red", lwd = 2)
library(tidyverse)
rawdata %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc(n), Type.1)
rawdata %>% filter(Total == max(Total))
rawdata %>% arrange(desc(Total)) %>% top_n(5, Total)
rawdata %>% filter(Total == min(Total))
rawdata %>% arrange(Total) %>% top_n(-5, Total)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Defense)) %>% select(Type.1, Defense)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(HP)) %>% select(Type.1, HP)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Sp..Atk)) %>% select(Type.1, Sp..Atk)
rawdata %>% group_by(Type.1) %>% summarise_each(funs(mean)) %>% arrange(desc(Attack)) %>% select(Type.1, Attack)
rawdata %>% filter(Legendary == "True") %>% group_by(Type.1) %>% count(Type.1) %>% arrange(desc(n), Type.1)
rawdata %>% filter(Type.1 == "Water") %>% arrange(desc(Total)) %>% top_n(5, Total)
rawdata %>% filter(Type.1 == "Water") %>% arrange(desc(Total)) %>% top_n(5, Total) %>% select(Name, Type.1, Type.2, Total, Legendary)
tail(rawdata)
km.out <- kmeans(rawdata[,5:11], center=3, nstart=10)
km.out
km.out <- kmeans(rawdata[,5:11], center=3, nstart=10)
km.out
#print(km.out$centers)
#print(km.out$cluster)
outputdata <- rawdata
outputdata$cluster <- km.out$cluster
tail(rawdata2)
outputdata <- rawdata
outputdata$cluster <- km.out$cluster
tail(outputdata)
outputdata %>% group_by(cluster) %>% count(cluster)
print(km.out$centers)
#print(km.out$cluster)
print(km.out$centers)
type(km.out$centers)
print(km.out$centers)
#print(km.out$cluster)
print(km.out$centers)
#print(km.out$cluster)
km.out$centers
#print(km.out$cluster)
km.out$centers
datacenter <- km.out$centers
#print(km.out$cluster)
View(datacenter)
km.out$centers
datacenter <- data.frame(km.out$centers)
#print(km.out$cluster)
View(datacenter)
km.out$centers
datacenter <- data.frame(km.out$centers)
datacenter[1:2]
#print(km.out$cluster)
km.out$centers
datacenter <- data.frame(km.out$centers)
datacenter[0:2]
#print(km.out$cluster)
km.out$centers
datacenter <- data.frame(km.out$centers)
#print(km.out$cluster)
outputdata <- rawdata
outputdata$Cluster <- km.out$cluster
tail(outputdata)
km.out$centers
datacenter <- data.frame(km.out$centers)
datacenter$cluster <- c(1,2,3)
#print(km.out$cluster)
View(datacenter)
km.out$centers
datacenter <- data.frame(km.out$centers)
datacenter$cluster <- c(1,2,3)
datacenter
#print(km.out$cluster)
outputdata <- rawdata
outputdata$cluster <- km.out$cluster
tail(outputdata)
outputdata %>% group_by(cluster) %>% count(cluster)
outputdata %>% group_by(cluster) %>% count(cluster)
df_n_cluster <- outputdata %>% group_by(cluster) %>% count(cluster)
df_n_cluster
km.out$centers
datacenter <- data.frame(km.out$centers)
datacenter$cluster <- c(1,2,3)
datacenter
#print(km.out$cluster)
outputdata <- rawdata
outputdata$cluster <- km.out$cluster
tail(outputdata)
left_join(datacenter, df_n_cluster, by = "cluster")
plot(outputdata[,5:11], col = km.out$cluster,
main = "k-means with 3 clusters")
cluster1 <- outputdata %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
cluster1 <- outputdata %>% filter(cluster==1)
tail(cluster1)
cluster1 %>% group_by(cluster) %>% count(cluster)
plot(cluster1[,5:11], col = "black",
main = "k-means with 3 clusters (cluster 1)")
cluster2 <- rawdata2 %>% filter(cluster==2)
cluster2 <- outputdata %>% filter(cluster==2)
tail(cluster2)
cluster2 %>% group_by(cluster) %>% count(cluster)
plot(cluster2[,5:11], col = "red",
main = "k-means with 3 clusters (cluster 2)")
cluster3 <- outputdata %>% filter(cluster==3)
tail(cluster3)
cluster3 %>% group_by(cluster) %>% count(cluster)
cluster3 <- outputdata %>% filter(cluster==3)
tail(cluster3)
cluster3 %>% group_by(cluster) %>% count(cluster)
plot(cluster3[,5:11], col = "green",
main = "k-means with 3 clusters, cluster 3")
plot(outputdata[,5], col = km.out$cluster,
main = "k-means with 3 clusters")
plot(outputdata, col = km.out$cluster,
main = "k-means with 3 clusters")
plot(outputdata[,5], col = km.out$cluster,
main = "k-means with 3 clusters")
plot(outputdata[,5:6], col = km.out$cluster,
main = "k-means with 3 clusters")
plot(cluster3[,5:6], col = "green",
main = "k-means with 3 clusters, cluster 3")
plot(cluster2[,5:6], col = "red",
main = "k-means with 3 clusters (cluster 2)")
plot(cluster1[,5:6], col = "black",
main = "k-means with 3 clusters (cluster 1)")
